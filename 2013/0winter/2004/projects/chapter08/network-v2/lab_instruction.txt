SYSC2004 Lab #6 - Week of February 25th, 2013

In this lab you will learn to use inheritance, one of the most important concepts in object-oriented software development.

Open the project network-v2.
Note: for those using an older version of the book, this project is not in the old version. This corresponds to the DoME project in the older versions. The projects.zip file that you have downloaded from the web site during the first lab contains the right code for this lab. 
The book is important to understand the concepts, but the exercises do not require it.


1. If you haven't read Chapter 8 yet, start the lab by reading it, mostly sections 8.2, 8.3, 8.4, 8.6. Make sure you understand the roles of the different classes in this project. 

2. Create a sample news feed, add a few posts, and display them using the method "show()". Create a static main method in the class NewsFeed that does this. Make sure the newsFeed includes both MessagePosts and PhotoPosts. It will be useful for testing, as you make your modifications to the code.

3. Find the code of the display() method in class Post. As you can see from your tests, this only displays the username who created the post, then the time, and the number of "likes" and comments. We're going to change the way this method works for the subclasses. 

3.1 First we want to separate this display in two parts, first the "contents" of the post, then the "metadata", that is the date, comments, and likes information. Here the "contents" is only the username. Replace the reference to the username by a method getContents(), that just returns the username. Write the method getContents().
Now instead of: System.out.println(username);
you should have: System.out.println(getContents());

3.2 In class MessagePost, redefine the method getContents() so that it includes the username and the posted text as well. 
It should return a string looking like: "Fred says: 'hello'", where Fred is the username, and "hello" is the text of the post.
Notice that the username is private in class Post. How can you access it? Implement a public accessor method.
Test that your code works. Now posts of class MessagePost use the redefined method. Which version of the getContents() method do the PhotoPost instances use? Why?

3.3 In class Photopost, redefine the method getContents() in a way that makes use of the picture filename and the caption.

4. We now want to add a new type of Post, an EventPost. Following the indications of section 8.5 in the textbook, implement this additional class. Implement an appropriate getContents() method.

5. (Extra challenge!) Comments should really be another kind of "Post". Modify class Post so that comments are instances of MessagePost, and show up nicely when the newsfeed is viewed. For this, you can get rid of the "click to display" part in the "display", and instead, show the contents of each comment. 
